using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147]
@variable(m, b[b_Idx], Bin)


# ----- Constraints ----- #
@constraint(m, e1, b[1]+b[2]+b[3] == 1.0)
@constraint(m, e2, b[4]+b[5]+b[6] == 1.0)
@constraint(m, e3, b[7]+b[8]+b[9] == 1.0)
@constraint(m, e4, b[10]+b[11]+b[12] == 1.0)
@constraint(m, e5, b[13]+b[14]+b[15] == 1.0)
@constraint(m, e6, b[16]+b[17]+b[18] == 1.0)
@constraint(m, e7, b[19]+b[20]+b[21] == 1.0)
@constraint(m, e8, b[22]+b[23]+b[24] == 1.0)
@constraint(m, e9, b[25]+b[26]+b[27] == 1.0)
@constraint(m, e10, b[28]+b[29]+b[30] == 1.0)
@constraint(m, e11, b[31]+b[32]+b[33] == 1.0)
@constraint(m, e12, b[34]+b[35]+b[36] == 1.0)
@constraint(m, e13, b[37]+b[38]+b[39] == 1.0)
@constraint(m, e14, b[40]+b[41]+b[42] == 1.0)
@constraint(m, e15, b[43]+b[44]+b[45] == 1.0)
@constraint(m, e16, b[46]+b[47]+b[48] == 1.0)
@constraint(m, e17, b[49]+b[50]+b[51] == 1.0)
@constraint(m, e18, b[52]+b[53]+b[54] == 1.0)
@constraint(m, e19, b[55]+b[56]+b[57] == 1.0)
@constraint(m, e20, b[58]+b[59]+b[60] == 1.0)
@constraint(m, e21, b[61]+b[62]+b[63] == 1.0)
@constraint(m, e22, b[64]+b[65]+b[66] == 1.0)
@constraint(m, e23, b[67]+b[68]+b[69] == 1.0)
@constraint(m, e24, b[70]+b[71]+b[72] == 1.0)
@constraint(m, e25, b[73]+b[74]+b[75] == 1.0)
@constraint(m, e26, b[76]+b[77]+b[78] == 1.0)
@constraint(m, e27, b[79]+b[80]+b[81] == 1.0)
@constraint(m, e28, b[82]+b[83]+b[84] == 1.0)
@constraint(m, e29, b[85]+b[86]+b[87] == 1.0)
@constraint(m, e30, b[88]+b[89]+b[90] == 1.0)
@constraint(m, e31, b[91]+b[92]+b[93] == 1.0)
@constraint(m, e32, b[94]+b[95]+b[96] == 1.0)
@constraint(m, e33, b[97]+b[98]+b[99] == 1.0)
@constraint(m, e34, b[100]+b[101]+b[102] == 1.0)
@constraint(m, e35, b[103]+b[104]+b[105] == 1.0)
@constraint(m, e36, b[106]+b[107]+b[108] == 1.0)
@constraint(m, e37, b[109]+b[110]+b[111] == 1.0)
@constraint(m, e38, b[112]+b[113]+b[114] == 1.0)
@constraint(m, e39, b[115]+b[116]+b[117] == 1.0)
@constraint(m, e40, b[118]+b[119]+b[120] == 1.0)
@constraint(m, e41, b[121]+b[122]+b[123] == 1.0)
@constraint(m, e42, b[124]+b[125]+b[126] == 1.0)
@constraint(m, e43, b[127]+b[128]+b[129] == 1.0)
@constraint(m, e44, b[130]+b[131]+b[132] == 1.0)
@constraint(m, e45, b[133]+b[134]+b[135] == 1.0)
@constraint(m, e46, b[136]+b[137]+b[138] == 1.0)
@constraint(m, e47, b[139]+b[140]+b[141] == 1.0)
@constraint(m, e48, b[142]+b[143]+b[144] == 1.0)
@constraint(m, e49, b[145]+b[146]+b[147] == 1.0)
@NLconstraint(m, e50, b[1]*b[4]-b[1]*b[19]+b[1]*b[22]-b[1]*b[127]+b[2]*b[5]-b[2]*b[20]+b[2]*b[23]-b[2]*b[128]+b[3]*b[6]-b[3]*b[21]+b[3]*b[24]-b[3]*b[129]-b[4]*b[7]+b[4]*b[25]+b[4]*b[130]-b[5]*b[8]+b[5]*b[26]+b[5]*b[131]-b[6]*b[9]+b[6]*b[27]+b[6]*b[132]-b[7]*b[10]-b[7]*b[28]-b[7]*b[133]-b[8]*b[11]-b[8]*b[29]-b[8]*b[134]-b[9]*b[12]-b[9]*b[30]-b[9]*b[135]-b[10]*b[13]+b[10]*b[31]+b[10]*b[136]-b[11]*b[14]+b[11]*b[32]+b[11]*b[137]-b[12]*b[15]+b[12]*b[33]+b[12]*b[138]+b[13]*b[16]-b[13]*b[34]+b[13]*b[139]+b[14]*b[17]-b[14]*b[35]+b[14]*b[140]+b[15]*b[18]-b[15]*b[36]+b[15]*b[141]+b[16]*b[19]+b[16]*b[37]-b[16]*b[142]+b[17]*b[20]+b[17]*b[38]-b[17]*b[143]+b[18]*b[21]+b[18]*b[39]-b[18]*b[144]+b[19]*b[40]+b[19]*b[145]+b[20]*b[41]+b[20]*b[146]+b[21]*b[42]+b[21]*b[147]+b[22]*b[25]+b[22]*b[40]-b[22]*b[43]+b[23]*b[26]+b[23]*b[41]-b[23]*b[44]+b[24]*b[27]+b[24]*b[42]-b[24]*b[45]-b[25]*b[28]-b[25]*b[46]-b[26]*b[29]-b[26]*b[47]-b[27]*b[30]-b[27]*b[48]+b[28]*b[31]+b[28]*b[49]+b[29]*b[32]+b[29]*b[50]+b[30]*b[33]+b[30]*b[51]+b[31]*b[34]+b[31]*b[52]+b[32]*b[35]+b[32]*b[53]+b[33]*b[36]+b[33]*b[54]+b[34]*b[37]-b[34]*b[55]+b[35]*b[38]-b[35]*b[56]+b[36]*b[39]-b[36]*b[57]-b[37]*b[40]+b[37]*b[58]-b[38]*b[41]+b[38]*b[59]-b[39]*b[42]+b[39]*b[60]-b[40]*b[61]-b[41]*b[62]-b[42]*b[63]-b[43]*b[46]-b[43]*b[61]-b[43]*b[64]-b[44]*b[47]-b[44]*b[62]-b[44]*b[65]-b[45]*b[48]-b[45]*b[63]-b[45]*b[66]-b[46]*b[49]+b[46]*b[67]-b[47]*b[50]+b[47]*b[68]-b[48]*b[51]+b[48]*b[69]-b[49]*b[52]+b[49]*b[70]-b[50]*b[53]+b[50]*b[71]-b[51]*b[54]+b[51]*b[72]-b[52]*b[55]+b[52]*b[73]-b[53]*b[56]+b[53]*b[74]-b[54]*b[57]+b[54]*b[75]-b[55]*b[58]-b[55]*b[76]-b[56]*b[59]-b[56]*b[77]-b[57]*b[60]-b[57]*b[78]+b[58]*b[61]-b[58]*b[79]+b[59]*b[62]-b[59]*b[80]+b[60]*b[63]-b[60]*b[81]+b[61]*b[82]+b[62]*b[83]+b[63]*b[84]-b[64]*b[67]+b[64]*b[82]+b[64]*b[85]-b[65]*b[68]+b[65]*b[83]+b[65]*b[86]-b[66]*b[69]+b[66]*b[84]+b[66]*b[87]-b[67]*b[70]-b[67]*b[88]-b[68]*b[71]-b[68]*b[89]-b[69]*b[72]-b[69]*b[90]+b[70]*b[73]+b[70]*b[91]+b[71]*b[74]+b[71]*b[92]+b[72]*b[75]+b[72]*b[93]+b[73]*b[76]-b[73]*b[94]+b[74]*b[77]-b[74]*b[95]+b[75]*b[78]-b[75]*b[96]-b[76]*b[79]+b[76]*b[97]-b[77]*b[80]+b[77]*b[98]-b[78]*b[81]+b[78]*b[99]+b[79]*b[82]+b[79]*b[100]+b[80]*b[83]+b[80]*b[101]+b[81]*b[84]+b[81]*b[102]-b[82]*b[103]-b[83]*b[104]-b[84]*b[105]+b[85]*b[88]-b[85]*b[103]+b[85]*b[106]+b[86]*b[89]-b[86]*b[104]+b[86]*b[107]+b[87]*b[90]-b[87]*b[105]+b[87]*b[108]-b[88]*b[91]-b[88]*b[109]-b[89]*b[92]-b[89]*b[110]-b[90]*b[93]-b[90]*b[111]+b[91]*b[94]+b[91]*b[112]+b[92]*b[95]+b[92]*b[113]+b[93]*b[96]+b[93]*b[114]-b[94]*b[97]-b[94]*b[115]-b[95]*b[98]-b[95]*b[116]-b[96]*b[99]-b[96]*b[117]-b[97]*b[100]-b[97]*b[118]-b[98]*b[101]-b[98]*b[119]-b[99]*b[102]-b[99]*b[120]-b[100]*b[103]-b[100]*b[121]-b[101]*b[104]-b[101]*b[122]-b[102]*b[105]-b[102]*b[123]-b[103]*b[124]-b[104]*b[125]-b[105]*b[126]-b[106]*b[109]-b[106]*b[124]+b[106]*b[127]-b[107]*b[110]-b[107]*b[125]+b[107]*b[128]-b[108]*b[111]-b[108]*b[126]+b[108]*b[129]-b[109]*b[112]-b[109]*b[130]-b[110]*b[113]-b[110]*b[131]-b[111]*b[114]-b[111]*b[132]+b[112]*b[115]+b[112]*b[133]+b[113]*b[116]+b[113]*b[134]+b[114]*b[117]+b[114]*b[135]+b[115]*b[118]-b[115]*b[136]+b[116]*b[119]-b[116]*b[137]+b[117]*b[120]-b[117]*b[138]-b[118]*b[121]+b[118]*b[139]-b[119]*b[122]+b[119]*b[140]-b[120]*b[123]+b[120]*b[141]+b[121]*b[124]+b[121]*b[142]+b[122]*b[125]+b[122]*b[143]+b[123]*b[126]+b[123]*b[144]-b[124]*b[145]-b[125]*b[146]-b[126]*b[147]-b[127]*b[130]+b[127]*b[145]-b[128]*b[131]+b[128]*b[146]-b[129]*b[132]+b[129]*b[147]+b[130]*b[133]+b[131]*b[134]+b[132]*b[135]-b[133]*b[136]-b[134]*b[137]-b[135]*b[138]+b[136]*b[139]+b[137]*b[140]+b[138]*b[141]+b[139]*b[142]+b[140]*b[143]+b[141]*b[144]+b[142]*b[145]+b[143]*b[146]+b[144]*b[147]-objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script. 
